const int mod = 1e9 + 7;
  vector<vector<int>> multiply(vector<vector<int>>& a,vector<vector<int>>& b)
  {
      vector<vector<int>> res(a.size(),vector<int>(b[0].size()));
      for(int i = 0; i < a.size(); i++)
      {
          for(int k = 0; k < a[0].size(); k++)
          {
              for(int j = 0; j < b[0].size(); j++)
              {
                  res[i][j] = (res[i][j] + ((a[i][k] * 1LL * b[k][j]) % mod)) % mod;
              }
          }
      }
      return res;
  }

  vector<vector<int>> expo(vector<vector<int>>&a, int b)
  {
      if(b == 1) return a;
      vector<vector<int>> res(a.size(),vector<int>(a[0].size()));
      for(int i = 0; i < min(a.size(),a[0].size()); i++) res[i][i] = 1;
      while(b) {
          if(b & 1) res = multiply(res,a);
          b >>= 1; a = multiply(a,a);
      }
      return res;
  }
